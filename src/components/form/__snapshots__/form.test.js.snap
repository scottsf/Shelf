// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Renders Form component without crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Form
    id={144}
    img="http://test.com"
    match={
      Object {
        "params": Object {
          "id": 144,
        },
      }
    }
    name="TEST"
    price={10000000}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <img
          alt=""
          className="form__image"
        />,
        <p
          className="form__p"
        >
          Image URL:
        </p>,
        <input
          className="form__input"
          name="img"
          onChange={[Function]}
          value=""
        />,
        <p
          className="form__p"
        >
          Product Name:
        </p>,
        <input
          className="form__input"
          name="name"
          onChange={[Function]}
          value=""
        />,
        <p
          className="form__p"
        >
          Price
        </p>,
        <input
          className="form__input"
          name="price"
          onChange={[Function]}
          type="number"
          value=""
        />,
        <div
          className="form__button"
        >
          <Link
            replace={false}
            to="/"
          >
            <button
              className="form__button__cancel"
              onClick={[Function]}
            >
              Cancel
            </button>
          </Link>
          <Link
            replace={false}
            to="/"
          >
            <button
              className="form__button__add"
              onClick={[Function]}
            >
              Add Inventory
            </button>
          </Link>
        </div>,
      ],
      "className": "form",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "alt": "",
          "className": "form__image",
        },
        "ref": null,
        "rendered": null,
        "type": "img",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Image URL:",
          "className": "form__p",
        },
        "ref": null,
        "rendered": "Image URL:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "form__input",
          "name": "img",
          "onChange": [Function],
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Product Name:",
          "className": "form__p",
        },
        "ref": null,
        "rendered": "Product Name:",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "form__input",
          "name": "name",
          "onChange": [Function],
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Price",
          "className": "form__p",
        },
        "ref": null,
        "rendered": "Price",
        "type": "p",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "className": "form__input",
          "name": "price",
          "onChange": [Function],
          "type": "number",
          "value": "",
        },
        "ref": null,
        "rendered": null,
        "type": "input",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Link
              replace={false}
              to="/"
            >
              <button
                className="form__button__cancel"
                onClick={[Function]}
              >
                Cancel
              </button>
            </Link>,
            <Link
              replace={false}
              to="/"
            >
              <button
                className="form__button__add"
                onClick={[Function]}
              >
                Add Inventory
              </button>
            </Link>,
          ],
          "className": "form__button",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="form__button__cancel"
                onClick={[Function]}
              >
                Cancel
              </button>,
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Cancel",
                "className": "form__button__cancel",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Cancel",
              "type": "button",
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <button
                className="form__button__add"
                onClick={[Function]}
              >
                Add Inventory
              </button>,
              "replace": false,
              "to": "/",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Add Inventory",
                "className": "form__button__add",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Add Inventory",
              "type": "button",
            },
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt=""
            className="form__image"
          />,
          <p
            className="form__p"
          >
            Image URL:
          </p>,
          <input
            className="form__input"
            name="img"
            onChange={[Function]}
            value=""
          />,
          <p
            className="form__p"
          >
            Product Name:
          </p>,
          <input
            className="form__input"
            name="name"
            onChange={[Function]}
            value=""
          />,
          <p
            className="form__p"
          >
            Price
          </p>,
          <input
            className="form__input"
            name="price"
            onChange={[Function]}
            type="number"
            value=""
          />,
          <div
            className="form__button"
          >
            <Link
              replace={false}
              to="/"
            >
              <button
                className="form__button__cancel"
                onClick={[Function]}
              >
                Cancel
              </button>
            </Link>
            <Link
              replace={false}
              to="/"
            >
              <button
                className="form__button__add"
                onClick={[Function]}
              >
                Add Inventory
              </button>
            </Link>
          </div>,
        ],
        "className": "form",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "",
            "className": "form__image",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Image URL:",
            "className": "form__p",
          },
          "ref": null,
          "rendered": "Image URL:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form__input",
            "name": "img",
            "onChange": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Product Name:",
            "className": "form__p",
          },
          "ref": null,
          "rendered": "Product Name:",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form__input",
            "name": "name",
            "onChange": [Function],
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Price",
            "className": "form__p",
          },
          "ref": null,
          "rendered": "Price",
          "type": "p",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form__input",
            "name": "price",
            "onChange": [Function],
            "type": "number",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Link
                replace={false}
                to="/"
              >
                <button
                  className="form__button__cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>
              </Link>,
              <Link
                replace={false}
                to="/"
              >
                <button
                  className="form__button__add"
                  onClick={[Function]}
                >
                  Add Inventory
                </button>
              </Link>,
            ],
            "className": "form__button",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="form__button__cancel"
                  onClick={[Function]}
                >
                  Cancel
                </button>,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Cancel",
                  "className": "form__button__cancel",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Cancel",
                "type": "button",
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <button
                  className="form__button__add"
                  onClick={[Function]}
                >
                  Add Inventory
                </button>,
                "replace": false,
                "to": "/",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Add Inventory",
                  "className": "form__button__add",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Add Inventory",
                "type": "button",
              },
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
